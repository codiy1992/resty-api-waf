server {
        listen       80;
        server_name  localhost;

	    sendfile        off;

        error_log  /dev/stderr;
        access_log /data/storage/logs/access.log  json;

        root /data/public;
        index  index.html index.htm index.php;
        location / {
         try_files $uri $uri/ /index.php$is_args$args;
        }

        error_page   500 502 503 504  /50x.html;

        location = /50x.html {
            root   html;
        }

        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/dev/shm/php-cgi.sock;
            fastcgi_index  index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
            fastcgi_connect_timeout 300;
	        fastcgi_send_timeout 300;
            fastcgi_read_timeout 300;
            fastcgi_buffer_size 64k;
            fastcgi_buffers 4 64k;
            fastcgi_busy_buffers_size 128k;
            fastcgi_temp_file_write_size 128k;
            # 设定 nginx 变量 user_id, 并在 log 阶段填充值
            set $user_id 0;
            log_by_lua '
                local jwt = require "resty.jwt"
                local jwt_token = nil
                local auth_header = ngx.var.http_Authorization
                if auth_header then
                    _, _, jwt_token = string.find(auth_header, "Bearer%s+(.+)")
                end
                local jwt_obj = (jwt_token ~= nil and jwt:load_jwt(jwt_token) or nil)
                ngx.var.user_id = jwt_obj ~= nil and jwt_obj.payload.sub or 0
            ';
        }

        location ~ /debug/status/nginx$ {
            stub_status on;
            access_log off;
        }

        location ~ /debug/(status|ping)/fpm$ {
            fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;
            include fastcgi_params;
            fastcgi_pass unix:/dev/shm/php-cgi.sock;
            access_log off;
        }

    	location ~ /\. {
        	log_not_found off;
        	deny all;
   	 }
}

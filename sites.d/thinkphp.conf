server {
    listen       80;
    server_name  localhost;
    root /data;

    error_log  /dev/stderr;
    access_log /data/runtime/log/access.log  json;

    index  index.html index.htm index.php;

    error_page  404              /404.html;
    location = /404.html {
        return 404 'Sorry, File not Found!';
    }

    error_page  500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/local/openresty/nginx/html;
    }

    location / {
        try_files $uri @rewrite;
    }
    location @rewrite {
        set $static 0;
        if  ($uri ~ \.(css|js|jpg|jpeg|png|gif|ico|woff|eot|svg|css\.map|min\.map)$) {
            set $static 1;
        }
        if ($static = 0) {
            rewrite ^/(.*)$ /index.php?s=/$1;
        }
    }
    location ~ /Uploads/.*\.php$ {
        deny all;
    }
    location ~ \.php/ {
       set $user_id 0;
       if ($request_uri ~ ^(.+\.php)(/.+?)($|\?)) { }
       fastcgi_pass unix:/dev/shm/php-cgi.sock;
       include fastcgi_params;
       fastcgi_param SCRIPT_NAME     $1;
       fastcgi_param PATH_INFO       $2;
       fastcgi_param SCRIPT_FILENAME $document_root$1;
       # 设定 nginx 变量 user_id, 并在 log 阶段填充值
       set $user_id 0;
       log_by_lua_block {
            local jwt = require "resty.jwt"
            local jwt_token = nil
            local auth_header = ngx.var.http_Authorization
            if auth_header then
                _, _, jwt_token = string.find(auth_header, "Bearer%s+(.+)")
            end
            local jwt_obj = (jwt_token ~= nil and jwt:load_jwt(jwt_token) or nil)
            ngx.var.user_id = jwt_obj ~= nil and jwt_obj.payload ~= nil and jwt_obj.payload.sub or 0
        }
    }
    location ~ \.php$ {
        fastcgi_pass unix:/dev/shm/php-cgi.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
    location ~ /\.ht {
        deny  all;
    }
}

server {
    listen       80;
    server_name  localhost;

    sendfile        off;

    error_log  /dev/stderr;
    access_log /data/storage/logs/access.log  json;

    error_page   500 /500.json;
    location = /500.json {
        default_type application/json;
        return 500 '{"code":"500", "message": "Internal Server Error"}';
    }

    error_page   502 /502.json;
    location = /502.json {
        default_type application/json;
        return 502 '{"code":"502", "message": "Bad Gateway"}';
    }

    error_page   503 /503.json;
    location = /503.json {
        default_type application/json;
        return 503 '{"code":"503", "message": "Service Temporarily Unavailable"}';
    }

    error_page   504 /504.json;
    location = /504.json {
        default_type application/json;
        return 504 '{"code":"504", "message": "Gateway Timeout"}';
    }

    root /data/public;

    index  index.html index.htm index.php;

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/dev/shm/php-cgi.sock;
        fastcgi_index  index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        include        fastcgi_params;
        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 128k;
        # 设定 nginx 变量 user_id, 并在 log 阶段填充值
        set $user_id 0;
        log_by_lua_block {
            local jwt = require "resty.jwt"
            local jwt_token = nil
            local auth_header = ngx.var.http_Authorization
            if auth_header then
                _, _, jwt_token = string.find(auth_header, "Bearer%s+(.+)")
            end
            local jwt_obj = (jwt_token ~= nil and jwt:load_jwt(jwt_token) or nil)
            ngx.var.user_id = jwt_obj ~= nil and jwt_obj.payload ~= nil and jwt_obj.payload.sub or 0
        }
    }

    location ~ /\. {
        log_not_found off;
        deny all;
   	 }
}
